services:
  # User Database
  user-db:
    image: postgres:15-alpine
    container_name: user-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    volumes:
      - user-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d users"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aici-network

  # Todo Database
  todo-db:
    image: postgres:15-alpine
    container_name: todo-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todos
    volumes:
      - todo-db-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aici-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      NODE_ENV: production
      USER_DB_URL: postgresql://postgres:postgres@user-db:5432/users
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 60m
      PORT: 3001
      LOG_LEVEL: info
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      user-db:
        condition: service_healthy
    volumes:
      - ./user-service/prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm start
      "
    networks:
      - aici-network

  # Todo Service
  todo-service:
    build:
      context: ./todo-service
      dockerfile: Dockerfile
    container_name: todo-service
    environment:
      NODE_ENV: production
      TODO_DB_URL: postgresql://postgres:postgres@todo-db:5432/todos
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3002
      LOG_LEVEL: info
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3002:3002"
    depends_on:
      todo-db:
        condition: service_healthy
    volumes:
      - ./todo-service/prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm start
      "
    networks:
      - aici-network

  # Frontend (Optional)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - user-service
      - todo-service
    networks:
      - aici-network

volumes:
  user-db-data:
  todo-db-data:

networks:
  aici-network:
    driver: bridge
